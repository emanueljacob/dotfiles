#!/bin/bash

# Hide "last login" line when starting a new terminal session
touch $HOME/.hushlogin

# Install zsh
echo 'Install oh-my-zsh'
echo '-----------------'
rm -rf $HOME/.oh-my-zsh
curl -L https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh

echo 'Install & set configs'
echo '-----------------'
# Add global gitignore
ln -s $HOME/.dotfiles/shell/.global-gitignore $HOME/.global-gitignore
git config --global core.excludesfile $HOME/.global-gitignore

# Symlink zsh prefs
rm $HOME/.zshrc
ln -s $HOME/.dotfiles/shell/.zshrc $HOME/.zshrc

# Symlink global b5 Taskfile (for b5 Taskrunner)
[ -d $HOME/.b5 ] || mkdir -p $HOME/.b5 # create .b5 folder if it doesn't exist
rm $HOME/.b5/Taskfile
ln -s $HOME/.dotfiles/misc/Taskfile $HOME/.b5/Taskfile

# Symlink vim prefs
rm $HOME/.vimrc
ln -s $HOME/.dotfiles/shell/.vimrc $HOME/.vimrc
rm $HOME/.vim
ln -s $HOME/.dotfiles/shell/.vim $HOME/.vim

# Symlink the Mackup config
ln -s $HOME/.dotfiles/macos/.mackup.cfg $HOME/.mackup.cfg

# Fix missing font characters (see https://github.com/robbyrussell/oh-my-zsh/issues/1906)
cd ~/.oh-my-zsh/themes/
git checkout d6a36b1 agnoster.zsh-theme

# Activate z
cd ~/.dotfiles/shell
chmod +x z.sh

echo 'Install homebrew'
echo '----------------'
echo install homebrew
sudo rm -rf /usr/local/Cellar /usr/local/.git && brew cleanup
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"

echo 'Install zsh-autosuggestions'
echo '---------------------------'
brew install zsh-autosuggestions

echo 'Install zsh-syntax-highlighting'
echo '---------------------------'
brew install zsh-syntax-highlighting

echo 'Install pkg-config'
echo '------------------'
brew install pkg-config

echo 'Install wget'
echo '------------'
brew install wget

echo 'Install httpie'
echo '--------------'
brew install httpie

echo 'Install ncdu'
echo '------------'
brew install ncdu

echo 'Install hub'
echo '-----------'
brew install hub

echo 'Install ack'
echo '-----------'
brew install ack

echo 'Install rsync'
echo '-----------'
brew install rsync

echo 'Install nice quicklook plugins'
echo '-----------------------------------'
brew install --cask --force qlcolorcode qlstephen qlmarkdown quicklook-json qlprettypatch quicklook-csv webp-quicklook suspicious-package

echo 'Install php (7.4, 8.0)'
echo '-----------'
brew install php@7.4
brew install php@8.0

echo 'Install imagemagick'
echo '-------------------'
brew install imagemagick

echo 'Install imagick'
echo '---------------'
pecl install imagick

echo 'Install memcached'
echo '-----------------'
pecl install memcached

echo 'Install xdebug'
echo '--------------'
pecl install xdebug

echo 'Install redis'
echo '-------------'
pecl install redis

echo 'Install composer'
echo '----------------'
EXPECTED_COMPOSER_CHECKSUM="$(curl https://composer.github.io/installer.sig)"
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
ACTUAL_COMPOSER_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"
if [ "$EXPECTED_COMPOSER_CHECKSUM" != "$ACTUAL_COMPOSER_CHECKSUM" ]
then
    >&2 echo 'ERROR: Invalid installer checksum'
    rm composer-setup.php
    exit 1
fi
php composer-setup.php
rm composer-setup.php
mv composer.phar /usr/local/bin/composer

echo 'Install laravel valet (with domain vt23dev)'
echo '---------------------'
composer global require laravel/valet
valet install
valet domain vt23dev # or whatever you like of course

echo 'Install and start mysql'
echo '-------------'
brew install mysql
brew services start mysql

echo 'Install and link phpmyadmin (via valet)'
echo '-------------'
brew install phpmyadmin
cd /usr/local/share/phpmyadmin
valet link phpmyadmin

echo 'Install and start elasticsearch (with analysis-icu, analysis-phonetic)'
echo '-------------'
# https://www.elastic.co/guide/en/elasticsearch/reference/current/brew.html
brew tap elastic/tap
brew install elastic/tap/elasticsearch-full # but make sure the version is compatible with your magento version!!
elasticsearch-plugin install analysis-icu
elasticsearch-plugin install analysis-phonetic
brew services start elastic/tap/elasticsearch-full

echo 'Install and start kibana'
echo '-------------'
brew install elastic/tap/kibana-full
brew services start elastic/tap/kibana-full

echo 'Install mackup'
echo '--------------'
brew install mackup

echo 'Install node (16)'
echo '------------'
brew install node@16

echo 'Configure npm'
echo '-------------'
# Create a directory for global packages and tell npm where to store globally installed packages
mkdir "${HOME}/.npm-packages"
npm config set prefix "${HOME}/.npm-packages"

echo 'Install yarn'
echo '------------'
brew install yarn

echo 'Install python (3.8, 3.9)'
echo '-----------'
brew install python@3.8
brew install python@3.9

echo 'Install pipx'
echo '-----------'
brew install pipx
pipx ensurepath

echo 'Install poetry'
echo '-----------'
pipx install poetry

echo 'Install comlipy'
echo '-----------'
brew tap slashplus/comlipy https://gitlab.com/slashplus-build/comlipy.git
brew install comlipy

echo 'Install b5 Taskrunner'
echo '-----------'
brew tap team23/b5 https://git.team23.de/build/homebrew-b5.git
brew install b5

echo 'Install macOS apps (spectacle, sublime-text, docker)'
echo '-----------------------------------'
brew install --cask spectacle sublime-text iterm2
brew install docker

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
echo 'All done!'
echo 'Things to do to make the agnoster terminal theme work:'
echo '1. Install menlo patched font included in ~/.dotfiles/misc https://gist.github.com/qrush/1595572/raw/Menlo-Powerline.otf'
echo '2. Install patched solarized theme included in ~/.dotfiles/misc'

echo '++++++++++++++++++++++++++++++'
echo 'Some optional tidbits'

echo '1. Make sure dropbox is running first. If you have not backed up via Mackup yet, then run `mackup backup` to symlink preferences for a wide collection of apps to your dropbox. If you already had a backup via mackup run `mackup restore` You'\''ll find more info on Mackup here: https://github.com/lra/mackup.'
echo '2. Set some sensible os x defaults by running: $HOME/.dotfiles/macos/set-defaults.sh'
echo '3. Make a .dotfiles-custom/shell/.aliases for your personal commands'

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
